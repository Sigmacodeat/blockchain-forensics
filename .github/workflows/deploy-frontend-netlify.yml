name: Deploy Frontend to Netlify

on:
  push:
    branches: [ "main" ]
    paths:
      - 'frontend/**'
      - 'frontend/netlify.toml'
      - '.github/workflows/deploy-frontend-netlify.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}
    steps:
      - name: Secrets check
        if: ${{ env.NETLIFY_AUTH_TOKEN == '' || env.NETLIFY_SITE_ID == '' }}
        run: |
          echo "Netlify secrets missing. Skipping frontend deploy."
          echo "Required: NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID repository secrets."

      - name: Checkout
        if: ${{ env.NETLIFY_AUTH_TOKEN != '' && env.NETLIFY_SITE_ID != '' }}
        uses: actions/checkout@v4

      - name: Use Node 18
        if: ${{ env.NETLIFY_AUTH_TOKEN != '' && env.NETLIFY_SITE_ID != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install deps
        if: ${{ env.NETLIFY_AUTH_TOKEN != '' && env.NETLIFY_SITE_ID != '' }}
        working-directory: frontend
        run: npm ci

      - name: Build
        if: ${{ env.NETLIFY_AUTH_TOKEN != '' && env.NETLIFY_SITE_ID != '' }}
        working-directory: frontend
        run: npm run build
        env:
          VITE_API_URL: https://blockchain-forensics-backend.onrender.com
          VITE_GOOGLE_CLIENT_ID: ${{ env.VITE_GOOGLE_CLIENT_ID }}

      - name: Install Netlify CLI
        if: ${{ env.NETLIFY_AUTH_TOKEN != '' && env.NETLIFY_SITE_ID != '' }}
        working-directory: frontend
        run: npm i -g netlify-cli

      - name: Deploy to Netlify
        if: ${{ env.NETLIFY_AUTH_TOKEN != '' && env.NETLIFY_SITE_ID != '' }}
        working-directory: frontend
        run: netlify deploy --dir=dist --prod --site ${{ env.NETLIFY_SITE_ID }} --message "CI deploy"
        env:
          NETLIFY_AUTH_TOKEN: ${{ env.NETLIFY_AUTH_TOKEN }}
