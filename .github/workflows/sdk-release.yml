name: SDK Release

on:
  push:
    tags:
      - 'sdk-v*'
  workflow_dispatch:

jobs:
  openapi-validate:
    name: OpenAPI Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate OpenAPI spec
        run: |
          docker run --rm -v "${{ github.workspace }}":/local openapitools/openapi-generator-cli validate \
            -i /local/backend/docs/openapi.yaml

  build-sdks:
    name: Generate SDKs
    runs-on: ubuntu-latest
    needs: openapi-validate
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Make script executable
        run: chmod +x scripts/generate-sdks.sh
      - name: Generate SDKs from OpenAPI
        run: bash scripts/generate-sdks.sh
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Inject version from tag
        run: |
          TAG="${GITHUB_REF_NAME}"
          # Expected format sdk-vX.Y.Z
          VER="${TAG#sdk-v}"
          echo "Detected version: $VER from tag $TAG"
          if [ -f docs/sdk/typescript/package.json ]; then
            jq --arg v "$VER" '.version=$v' docs/sdk/typescript/package.json > docs/sdk/typescript/package.json.tmp && mv docs/sdk/typescript/package.json.tmp docs/sdk/typescript/package.json
          fi
          if [ -f docs/sdk/python/pyproject.toml ]; then
            sed -i "s/^version = \".*\"/version = \"$VER\"/" docs/sdk/python/pyproject.toml
          fi
      - name: Archive SDKs
        run: |
          cd docs/sdk
          zip -r ../sdk-typescript.zip typescript
          zip -r ../sdk-python.zip python
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sdk-bundles
          path: |
            docs/sdk/sdk-typescript.zip
            docs/sdk/sdk-python.zip

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-sdks
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: sdk-bundles
          path: dist
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/sdk-typescript.zip
            dist/sdk-python.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish SDKs (optional)
    runs-on: ubuntu-latest
    needs: build-sdks
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      TESTPYPI_TOKEN: ${{ secrets.TESTPYPI_TOKEN }}
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node for npm publish
        if: ${{ env.NPM_TOKEN != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      - name: Inject version (from tag) for publish
        run: |
          TAG="${GITHUB_REF_NAME}"; VER="${TAG#sdk-v}"
          if [ -f docs/sdk/typescript/package.json ]; then
            jq --arg v "$VER" '.version=$v' docs/sdk/typescript/package.json > docs/sdk/typescript/package.json.tmp && mv docs/sdk/typescript/package.json.tmp docs/sdk/typescript/package.json
          fi
          if [ -f docs/sdk/python/pyproject.toml ]; then
            sed -i "s/^version = \".*\"/version = \"$VER\"/" docs/sdk/python/pyproject.toml
          fi
      - name: npm publish (TypeScript SDK)
        if: ${{ env.NPM_TOKEN != '' }}
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }}
        run: |
          cd docs/sdk/typescript
          npm publish --access public
      - name: Setup Python
        if: ${{ env.TESTPYPI_TOKEN != '' || env.PYPI_TOKEN != '' }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Build Python package
        if: ${{ env.TESTPYPI_TOKEN != '' || env.PYPI_TOKEN != '' }}
        run: |
          python -m pip install --upgrade build twine
          cd docs/sdk/python
          python -m build
      - name: Upload to TestPyPI
        if: ${{ env.TESTPYPI_TOKEN != '' }}
        run: |
          python -m twine upload --repository-url https://test.pypi.org/legacy/ -u __token__ -p "${{ env.TESTPYPI_TOKEN }}" docs/sdk/python/dist/*
      - name: Upload to PyPI
        if: ${{ env.PYPI_TOKEN != '' }}
        run: |
          python -m twine upload -u __token__ -p "${{ env.PYPI_TOKEN }}" docs/sdk/python/dist/*
