name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Täglich um 3 Uhr morgens
    - cron: '0 3 * * *'

jobs:
  bandit:
    name: Bandit Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Bandit
        run: pip install bandit[toml]
      
      - name: Run Bandit
        run: |
          mkdir -p security-reports
          bandit -r backend/app/ -f json -o security-reports/bandit.json || true
          bandit -r backend/app/ -f txt
        continue-on-error: true
      
      - name: Upload Bandit Results
        uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: security-reports/bandit.json

  safety:
    name: Safety Dependency Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Safety
        run: pip install safety
      
      - name: Run Safety Check
        run: |
          cd backend
          safety check --json || true
        continue-on-error: true

  semgrep:
    name: Semgrep SAST
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: .semgrep.yml

  secrets:
    name: Secrets Detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full history für Secret Scanning
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install detect-secrets
        run: pip install detect-secrets
      
      - name: Run Secrets Scan
        run: |
          detect-secrets scan --all-files --force-use-all-plugins > secrets-baseline.json || true
          detect-secrets audit secrets-baseline.json || true
        continue-on-error: true

  trivy:
    name: Trivy Container Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './backend'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
        if: always()

  security-tests:
    name: Run Security Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          pip install -r security-requirements.txt
          pip install pytest pytest-cov
      
      - name: Run Security Tests
        run: |
          cd backend
          pytest tests/security/ -v --tb=short
        env:
          TESTING: "true"
